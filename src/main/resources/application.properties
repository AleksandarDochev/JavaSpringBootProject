#configure server port
#defalait is 8080
#server.port=8484
#configure my props
#Example of injection / Define custom properties
coach.name=Alman Sacks
team.name=The Far Crew
#we add all the possible endpoints
management.endpoints.web.exposure.include=*
#we remove these 2 endpoints
management.endpoints.web.exposure.exclude=health,info
#so we can access info
management.info.env.enabled=true
info.app.name=My Super Cool App
info.app.description= carzy fun app,yoohoo!
info.app.version=1.0.0
#
#Change Spring Boot embedded server port
#
server.port=7070
#
#Set the context path of the application
#
#All requests should prefixed with /mycoolapp
#like http://localhost:7070/mycoolapp/teaminfo
#Going to turn it off for faster testing
#server.servlet.context-path=/mycoolapp
#we do this to make all beans not initialize globally (make them @Lazy)
#spring.main.lazy-initialization=true

#
#Adding JDBC database connect info
#
#if error is
# Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
#	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191) ~[hibernate-core-6.4.4.Final.jar:6.4.4.Final]
#	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87) ~[hibernate-core-6.4.4.Final.jar:6.4.4.Final]
#	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:143) ~[hibernate-core-6.4.4.Final.jar:6.4.4.Final]
#	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:348) ~[hibernate-core-6.4.4.Final.jar:6.4.4.Final]
#	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107) ~[hibernate-core-6.4.4.Final.jar:6.4.4.Final]
#	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68) ~[hibernate-core-6.4.4.Final.jar:6.4.4.Final]
#	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130) ~[hibernate-core-6.4.4.Final.jar:6.4.4.Final]
#	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-6.4.4.Final.jar:6.4.4.Final]
#
# 1.Start SQL workbench login into springstudent -> Managment (on the left) -> Startup/Shutdown ->Start server
# 2.If you have already installed MySQL on a Windows machine make sure it is running as a service.. You can do that by
#   press WINDOWS key--> services --> MySQL(ver) --> Right-Click --> Start
spring.datasource.url=jdbc:mysql://localhost:3306/student_tracker
spring.datasource.username=springstudent
spring.datasource.password=springstudent
#
#Turn off the Spring Boot banner
#
spring.main.banner-mode=off
#
#Reduce logging level to warn
#
logging.level.root=warn

#
#for https://stackoverflow.com/questions/30549489/what-is-this-spring-jpa-open-in-view-true-property-in-spring-boot
#
spring.jpa.open-in-view=false

#
#Add logging configs to display SQL statements
#log sQL statements
logging.level.org.hibernate.SQL=debug
#log values for SQL statements
logging.level.org.hibernate.orm.jdbc.bind=trace